<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamproject3.team3.mapper.infoMapper">

	<select id="findgenre" resultType="genreVO">
		select genre_id genreid, name genrename from genre
	</select>
	
	<select id="findmovie" resultType="movieVO">
		select title, posterpath, movie_id
		from movie
		where vote_count > 1
		order by release_date desc	
		limit ${ from }, ${ to };
	</select>
	
	<select id="findinfo" parameterType="int" resultType="movieVO">
		select *
		from movie
		where movie_id = "${ movie_id }"
	</select>
	
	<insert id="insertreview" parameterType="reviewVO">
		insert into review (member_id, movie_id, review)
		values
		(#{member_id}, #{movie_id}, #{review})
	</insert>
	
	<insert id="insertrating" parameterType="reviewVO">
		insert into rating (member_id, movie_id, rating)
		values
		(#{member_id}, #{movie_id}, #{rating})
	</insert>
	
	<select id="findreview" resultType="reviewVO">
		select g.rating rating, w.review review, w.regdate regdate, w.member_id member_id 
		from review w join rating g 
		on w.movie_id = g.movie_id and w.member_id = g.member_id
		where w.movie_id = '${ movie_id }'
	</select>
	
	<select id="check" resultType="int">
		select count(*)
		from review
		where movie_id = '${ movie_id }'
		and member_id = '${ member_id }'
	</select>
	
	<delete id="deletereview" parameterType="reviewVO">
		delete from review
		where movie_id = '${ movie_id }'
		and member_id = '${ member_id }'
	</delete>
	
	<delete id="deleterating" parameterType="reviewVO">
		delete from rating
		where movie_id = '${ movie_id }'
		and member_id = '${ member_id }'
	</delete>
	
	<select id="getmovie_genre" resultType="movieVO">
		select title, posterpath, m.movie_id 
		from movie m join movie_genre mg 
		on (m.movie_id = mg.movie_id) 
		where genre_id = '${ genre }' and vote_count>1 
		order by release_date desc 
		limit ${ from }, ${ to };
	</select>
</mapper>