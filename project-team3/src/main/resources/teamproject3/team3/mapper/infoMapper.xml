<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
		   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamproject3.team3.mapper.infoMapper">

	<select id="findgenre" resultType="genreVO">
		select genre_id genreid, name genrename from genre
	</select>
	
	<select id="moviegenre" resultType="genreVO">
		select g.genre_id genreid, name genrename 
		from genre g
		join movie_genre mg
		on (g.genre_id = mg.genre_id)
		where movie_id = #{ movie_id }
	</select>
	
	<select id="findinfo" parameterType="int" resultType="movieVO">
		select * 
		from movie
		where movie_id = "${ movie_id }"
	</select>
	
	<insert id="insertreview" parameterType="reviewVO">
		insert into review (member_id, movie_id, review)
		values
		(#{member_id}, #{movie_id}, #{review})
	</insert>
	
	<insert id="insertrating" parameterType="reviewVO">
		insert into rating (member_id, movie_id, rating)
		values
		(#{member_id}, #{movie_id}, #{rating})
	</insert>
	
	<select id="findreview" resultType="reviewVO">
		select g.rating rating, w.review review, w.regdate regdate, w.member_id member_id 
		from review w join rating g 
		on w.movie_id = g.movie_id and w.member_id = g.member_id
		where w.movie_id = '${ movie_id }'
	</select>
	
	<select id="check" resultType="int">
		select count(*)
		from review
		where movie_id = '${ movie_id }'
		and member_id = '${ member_id }'
	</select>
	
	<delete id="deletereview" parameterType="reviewVO">
		delete from review
		where movie_id = '${ movie_id }'
		and member_id = '${ member_id }'
	</delete>
	
	<delete id="deleterating" parameterType="reviewVO">
		delete from rating
		where movie_id = '${ movie_id }'
		and member_id = '${ member_id }'
	</delete>
	
	<select id="findmovie" resultType="movieVO">
		select row_number() over(order by release_date desc) vote_count, title, posterpath, movie_id
		from movie
		where vote_count &gt; 0
		and posterpath not like ''
		limit ${ from }, ${ to };
	</select>
	
	<select id="getmovie_genre" resultType="movieVO">
		select title, posterpath, m.movie_id 
		from movie m  
		join movie_genre mg 
		on (m.movie_id = mg.movie_id)
		where genre_id = '${ genre }' and vote_count &gt; 0 
		and posterpath not like ''
		order by release_date desc
		limit ${ from }, ${ to };
	</select>
	
	<select id="movie_ol" resultType="movieVO">
		select title, posterpath, m.movie_id 
		from movie m
		where vote_count &gt; 0
		and original_language = '${ ol }' 
		and posterpath not like ''
		order by release_date desc
		limit ${ from }, ${ to };
	</select>
	
	<select id="movie_ol_genre" resultType="movieVO">
		select title, posterpath, m.movie_id 
		from movie m  
		join movie_genre mg
		on (m.movie_id = mg.movie_id) 
		where genre_id = '${ genre }' and vote_count &gt; 0
		and original_language = '${ ol }' 
		and posterpath not like ''
		order by release_date desc
		limit ${ from }, ${ to };
	</select>
	
	<select id="moviesearch" resultType="movieVO">
		select title
		from movie
		where title like '%${search}%'
		limit 5;
	</select>
	
	<select id="findtitle" resultType="movieVO">
		select movie_id
		from movie
		where title = '${title}'
	</select>
	
	<select id="counttitle" resultType="int">
		select count(*)
		from movie
		where title = '${title}'
	</select>
	
	<select id="countjjim" resultType="int">
		select count(*)
		from jjim
		where member_id = '${ member_id }'
		and movie_id = '${ movie_id }'
	</select>
	
	<insert id="addjjim" parameterType="jjimVO">
		insert into jjim (movie_id, member_id)
		values
		(#{ movie_id }, #{ member_id })
	</insert>
	
	<delete id="deletejjim" parameterType="jjimVO">
		delete from jjim
		where movie_id = '${ movie_id }'
		and member_id = '${ member_id }'
	</delete>
	
	<select id="findvideo" resultType="videoVO">
		select videokey, videotype, name, site
		from video
		where movie_id = '${movie_id}'
		order by name desc;
	</select>
	
	<select id="findactor" resultType="personVO">
		select a.id, a.name, a.profile_path, a.role
		from actor a
		join movie m 
		on (m.movie_id = a.movie_id)
		where m.movie_id ='${ movie_id }'
	</select>
	
	<select id="findcrew" resultType="personVO">
		select c.id, c.name, c.profile_path, c.department
		from crew c
		join movie m 
		on (m.movie_id = c.movie_id)
		where m.movie_id ='${ movie_id }'
	</select>
	
	<select id="findjjim" resultType="int">
		select count(*)
		from jjim
		where movie_id = '${ movie_id }'
		and member_id = '${ memberId }'
	</select>
</mapper>